
    
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct stack
{
    struct stack *next;
    char top;
}a;
int count(a** stack)
{
    a* temp=*stack;
    int c=0;
    while(temp!=NULL)
    {
        temp=temp->next;
        c=c+1;
    }
    return c;
}
int pre(char c)
{
    if(c=='*'|c=='/')
    {
        return 2;
    }
    else if(c=='+'|c=='-')
    {
        return 1;
    }
    else if (c=='('|c==')')
    {
        return 4;
    }
    else
    {
        return 0;
    }
}
a* create(char data )
{
    a* newnode=(a*)malloc(sizeof(a));
    newnode->top=data;
    newnode->next=NULL;
}
void push(a** stack,char data)
{
       
        a* newelement=create(data);
        newelement->next=*stack;
        *stack=newelement;
        
}
char  pop(a** stack)
{
    int k=count(stack);
    if(k==0)
     {
        return ' ';
     }
     else
     {
         a* temp=*stack;
         char c=temp->top;
         *stack=temp->next;
        return c;
     }
}
char peek(a** stack)
{
    int k=count(stack);
    
    if(k==0)
     {
         
         return ' ';
     }
     else
     {
         a* temp=* stack;
         char c=temp->top;
         return c;
     }
}

int main()
{   char s[100];
    int e=0;
    printf("please enter your expression with giving any spaces:");
    fgets(s,sizeof(s),stdin);
    a* stack=NULL;
    for(int i=0;i<strlen(s);i++)
    {
        int b=pre(s[i]);
        if (b==0)
        {
            printf("%c",s[i]);
        }
        else
        {
            char c=peek(&stack);
            e=pre(c);
            if(b>e&&b!=4)
            {
                push(&stack,s[i]);
            }
            else 
            {
                if(b==4)
                {
                    char d=peek(&stack);
                    if(s[i]=='(')
                    {
                        push(&stack,s[i]);
                    }
                    else
                    {
                        while(d!='(')
                        {
                           d=pop(&stack);
                        }
                        
                    }
                    
                }
                else
                {
                    char g=peek(&stack);
                      while(b!=e|g!=' ')
                     {    char f=pop(&stack);
                          printf("%c",f);
                          e=pre(peek(&stack));
                          g=peek(&stack);
                    
                     }
                     if(b==e)
                     {
                         printf("%d",pop(&stack));
                         push(&stack,s[i]);
                     }
                     else
                     {
                         push(&stack,s[i]);
                     }
                    
                   
                }
            }
        }
        
    }
    char f=peek(&stack);
    while(f!=' ')
    {
        printf("%c",pop(&stack));
        f=peek(&stack);
    }
    

    

}
    


