#include <bits/stdc++.h>
using namespace std;
#define max_size 10
struct node
{
    int data;
    struct node* next;
};

class queue1
{
    struct node* front=NULL;
    struct node* rear=NULL;
    public:
    int count()
    {
        if(front==NULL)     return(0);
        else
        {
            int c=0;
            struct node* temp=front;
            while(temp!=NULL)
            {
                c=c+1;
                temp=temp->next;
            }
            return c;
        }
        
    }
    
    void enqueue(int data1)
    {
         int a=count();
        if(a==max_size)
        {
            cout<<"queue is full\n";
            return ;
        }
        struct node* newnode=new (node);
        newnode->data=data1;
        newnode->next=NULL;
        if(front==NULL) 
        {
            front=rear=newnode;
            return;
        }
        else
        {
            rear->next=newnode;
            rear=newnode;
        }
    }
    void dequeue()
    {
        int a=count();
        if(a==0)
        {
            cout<<"queue is empty\n";
            return ;
        }
        if(front==NULL)     printf("queue is empty\n");
        else
        {
            struct node* temp=front;
            front=front->next;
            delete temp;
        }
        
    }
    int peek()
    {
        if(front==NULL)  return(-1);
        else      return(front->data);
    }
    void isEmpty()
    {
        if(front==NULL)
        {
        cout<<"queue is empty\n";
        }
    }
    void isFull()
    {
        int a=count();
        if(a==max_size)
        {
            cout<<"queue is full\n";
        }
        else
        {
            cout<<"queue is not full\n";
        }
    }
    void display()
    {
        cout<<"the final queue is:\n";
        while(front!=NULL)
        {
            cout<<front->data<<" ";
            front=front->next;
        }
    }

    
    
};

int main()
{
    int a=1;
    cout<<"press corresponding numbers to execute corresponding operations"<<endl;
    cout<<"1.enqueue\n"<<"2.dequeue\n"<<"3.peek\n"<<"4.isfull\n"<<"5.isempty\n";
    queue1 b;
    while(a)
    {
        cout<<"choice:";
        int c;
        cin>>c;
        switch(c)
        {
            case 1:
            {
                int d;
                cout<<"enter a number:";
                cin>>d;
                b.enqueue(d);
                break;
            }
            case 2: 
            {
                b.dequeue(); break;
            }
            case 3:
            {
                cout<<"topelement="<<b.peek()<<"\n";
                break;
            }
            case 4:
            {
                b.isFull();   break;
            }
            case 5: 
            {
                b.isEmpty();
                break;
            }
            default:
            {
                a=0;  
                break;
            }
        }
        
        
    }
    b.display();

    return 0;
}
